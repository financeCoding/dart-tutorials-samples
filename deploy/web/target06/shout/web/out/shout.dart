// Auto-generated from shout.html.
// DO NOT EDIT.

library shout_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;


// Original code
String shoutThis='';

void main() {
}

String palindrome() {
  var buffer = new StringBuffer(shoutThis);
  for (int i = shoutThis.length - 1; i >= 0; i--) {
    buffer.write(shoutThis[i]);
  }
  return buffer.toString();
}

// Additional generated code
void init_autogenerated() {
  var _root = autogenerated.document.body;
  var __e0, __e2, __e4, __e6, __e8;
  var __t = new autogenerated.Template(_root);
  __e0 = _root.nodes[3];
  __t.listen(__e0.onInput, ($event) { shoutThis = __e0.value; });
  __t.oneWayBind(() => shoutThis, (e) { if (__e0.value != e) __e0.value = e; }, false, false);
  __e2 = _root.nodes[5];
  var __binding1 = __t.contentBind(() =>  shoutThis.length , false);
  __e2.nodes.addAll([new autogenerated.Text('      Length: '),
      __binding1,
      new autogenerated.Text(' ')]);
  __e4 = _root.nodes[7];
  var __binding3 = __t.contentBind(() =>  shoutThis.toUpperCase() , false);
  __e4.nodes.addAll([new autogenerated.Text('     Shouted: '),
      __binding3,
      new autogenerated.Text(' ')]);
  __e6 = _root.nodes[9];
  var __binding5 = __t.contentBind(() =>  (shoutThis.length >= 6) ?
                             shoutThis.substring(1, 5) :
                             shoutThis.substring(0, 0) , false);
  __e6.nodes.addAll([new autogenerated.Text('   Substring: '),
      __binding5,
      new autogenerated.Text(' ')]);
  __e8 = _root.nodes[11];
  var __binding7 = __t.contentBind(() =>  palindrome() , false);
  __e8.nodes.addAll([new autogenerated.Text(' Palindromic: '),
      __binding7,
      new autogenerated.Text(' ')]);
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=shout.dart.map