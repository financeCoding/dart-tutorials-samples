import "dart:uri" as MC;import "dart:async" as WB;import "dart:collection" as AC;import "dart:html" as q;class BC{static const  CC="Chrome";static const  DC="Safari";final  sB;final  minimumVersion;const BC(this.sB,[this.minimumVersion]);}class EC{final  name;const EC(this.name);}var m=''; XB(){} YB(){var h=new StringBuffer(m);for(int g=m.length-1;g>=0;g-- ){h.write(m[g]);}return h.toString();} ZB(){var OC=q.document.body;var PC,QC,RC,SC,TC;var UC=new JC(OC);PC=OC.nodes[3];UC.listen(PC.onInput,(h){m=PC.value;});UC.vB(()=>m,(g){if(PC.value!=g)PC.value=g;},false,false);QC=OC.nodes[5];var VC=UC.AB(()=>m.length,false);QC.nodes.addAll([new q.Text('      Length: '),VC,new q.Text(' ')]);RC=OC.nodes[7];var WC=UC.AB(()=>m.toUpperCase(),false);RC.nodes.addAll([new q.Text('     Shouted: '),WC,new q.Text(' ')]);SC=OC.nodes[9];var XC=UC.AB(()=>(m.length>=6)?m.substring(1,5):m.substring(0,0),false);SC.nodes.addAll([new q.Text('   Substring: '),XC,new q.Text(' ')]);TC=OC.nodes[11];var YC=UC.AB(()=>YB(),false);TC.nodes.addAll([new q.Text(' Palindromic: '),YC,new q.Text(' ')]);UC.GB();UC.insert();}main(){MB=false;XB();ZB();}typedef  s( e);typedef  aB( changes);typedef  o();typedef  bB();class BB{final oldValue;final newValue;final  changes;BB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is BB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>jB(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class JB{JB();} cB(g, i,[ debugName]){if(g is p){var h=g;return CB(h,(t){i(new BB(h,h,t));});}var j=new EB(g,i,debugName);if(!j.ZC()){return dB;}return j.aC;} CB( g, i){if(g.SB==null)g.SB=new FB();var h=g.SB.add(i);return h.remove;}class p{} dB(){}var w;var DB;class EB{static var eB=0;final  bC= ++EB.eB;final  cC;final  dC;final  eC;final  fC=new Map();final  gC=[] ;var hC=false;var iC;EB(this.cC,this.dC,this.eC); toString()=>eC!=null?'<observer ${bC}: ${eC}>':'<observer ${bC}>'; ZC(){var h=w;w=this;try {iC=cC();if(iC is Iterable&&iC is !List&&iC is !p){iC=(iC as Iterable).toList();}}catch (g,i){KB(g,i,cC,'from ${this}');iC=null;}fC.forEach(jC);fC.clear();assert(w==this);w=h;kC();return gC.length>0;} lC( i){try {dC(i);}catch (g,h){KB(g,h,dC,'from ${this}');}} kC(){var g=iC;if(g is !p)return;gC.add(CB(g,(h){lC(new BB(g,g,h));}));} jC( i, j){gC.add(CB(i,(t){if(hC)return;for(var g in t){var h=j[g.key];if(h!=null&&(h&g.type)!=0){hC=true;if(DB==null){DB=new AC.SplayTreeMap();}DB[bC]=this;return;}}}));} aC(){for(var g in gC){g();}hC=false;}}typedef  fB(error,stackTrace,obj, message);var KB=gB; gB(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class hB{hB();}class iB{iB();}class k<l>{var mC;var nC;var oC;var pC;k.NC( g,this.oC):pC=g{if(oC!=null)oC.qC++ ;} get next=>nC; get value=>pC;set value( g)=>pC=g; rC( g, h){nC=h;mC=g;if(g!=null)g.nC=this;if(h!=null)h.mC=this;return this;} append( g)=>new k<l>.NC(g,oC).rC(this,nC); remove(){if(oC==null)return;oC.qC-- ;if(mC!=null){mC.nC=nC;}else{oC.sC=nC;}if(nC!=null){nC.mC=mC;}else{oC.tC=mC;}nC=null;mC=null;oC=null;}}class FB<l> extends AC.IterableBase<l>{var sC;var tC; get length=>qC;var qC=0;FB(){} get head=>sC; add( h){var g=new k<l>.NC(h,this);if(tC==null)return sC=tC=g;return tC=g.rC(tC,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new FC<l>(this);}class FC<l> implements Iterator<l>{var uC;var oC;var vC;var wC=-1;FC(this.oC){uC=new List<k>(oC.length);var h=0;var g=oC.head;while (g!=null){uC[h++ ]=g;g=g.next;}} get current=>vC; moveNext(){do{wC++ ;}while(wC<uC.length&&uC[wC].oC!=oC);if(wC<uC.length){vC=uC[wC].value;return true;}else{vC=null;return false;}}}LB(h,g)=>h.hashCode*31+g.hashCode;jB(h,g,i)=>LB(LB(h,g),i); kB(h, g,[ stringValue]){var i=h is hB;if(stringValue==null){stringValue=h.toString();}if(!i&&g is q.Text){g.text=stringValue;}else{var j=g;g=i?new q.Element.html(stringValue):new q.Text(stringValue);j.replaceWith(g);}return g;} lB(g){if(g is iB)return g.toString();g=g.toString();return nB(g)?g:'#';}const mB=const["http","https","ftp","mailto"]; nB( h){var g=new MC.Uri(h).scheme;if(g=='')return true;return mB.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class u{ GB(){} insert(); remove();}class GC extends u{final  TB;var xC;final  listener;GC(this.TB,this.listener); insert(){xC=TB.listen(listener);} remove(){xC.cancel();xC=null;}}class HC extends u{final exp;final  action;final  isFinal;var n;HC(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new BB(null,exp()));}else if(n!=null){throw new StateError('binding already attached');}else{n=NB(exp,action,'generic-binding');}} remove(){if(!isFinal){n();n=null;}}}class IC extends u{final  VB;final  IB;final  UB;final  isFinal;var n;IC(this.IB,this.VB,this.UB,this.isFinal); yC(g){VB(UB?lB(g):g);} insert(){if(isFinal){yC(IB());}else if(n!=null){throw new StateError('data binding already attached.');}else{n=NB(IB,(g)=>yC(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){n();n=null;}}}class JC extends u{final  uB;final  children=[] ;final  nodes=[] ;JC(this.uB); listen( i, h){children.add(new GC(i,(g){h(g);pB();}));} AB( h,i){var g=new q.Text('');children.add(new HC(()=>'${h()}',(j){g=kB(h(),g,j.newValue);},i));return g;} vB(g,i,h,[isUrl=false]){children.add(new IC(g,i,isUrl,h));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); GB(){for(var g=0,h=children.length;g<h;g++ ){children[g].GB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var MB=false; oB(g, j,[ debugName]){if(MB)return cB(g,j);if(j==null)return (){};if(v==null)v=new FB<OB>();var h;var i=false;if(g is RB){h=(g as RB).zC;}else if(g is Function){h=g;try {var t=g();if(t is List){i=true;}else if(t is Iterable){i=true;h=()=>g().toList();}}catch (wB,xB){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${wB}, ${xB})');}}else if(g is List){h=()=>g;i=true;}else if(g is Iterable){h=()=>g.toList();i=true;}var yB=i?new KC(h,j,debugName):new OB(h,j,debugName);var zB=v.add(yB);return zB.remove;} NB(h,i,[debugName]){var j=oB(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new BB(null,g));return j;}var v;class OB{final  HB;final  zC;final  AD;var BD;OB(this.zC,this.AD,this.HB){BD=zC();} toString()=>HB==null?'<unnamed>':HB; tB(){var g=CD();if(DD(g)){var h=BD;ED(g);AD(new BB(h,g));return true;}return false;} DD(g)=>BD!=g; ED(g){BD=g;}CD(){try {return zC();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return BD;}}final  PB=10; pB(){if(v==null)return;var g;var h=0;do{g=false;for(var i in v){if(i.tB()){g=true;}}}while(g&& ++h<PB);if(h==PB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  QB<qB>();typedef  rB<qB>( value);class RB<qB>{RB();}class KC<qB> extends OB{KC(g, i, h):super(g,i,h){ED(CD());} DD( h){if(BD.length!=h.length)return true;for(int g=0;g<BD.length;g++ ){if(BD[g]!=h[g])return true;}return false;} ED(g){BD=new List<qB>.from(g);}}//@ sourceMappingURL=shout.html_bootstrap.dart.map
