import "dart:html" as o;import "dart:async" as qB;import "dart:collection" as rB;class sB{static const  tB="Chrome";static const  uB="Safari";final  iB;final  minimumVersion;const sB(this.iB,[this.minimumVersion]);}class vB{final  name;const vB(this.name);}var GB; QB(){var g=new Duration(seconds:1);new qB.Timer.periodic(g,HB);HB(null);} HB( CC){var g=new DateTime.now();GB=RB(g.hour,g.minute,g.second);fB();} RB( g, h, i){if(g>12){g=g-12;}var j=(h<=9)?'0${h}':'${h}';var m=(i<=9)?'0${i}':'${i}';return '${g}:${j}:${m}';} SB(){var DC=o.document.body;var EC;var FC=new yB(DC);EC=DC.nodes[3];var GC=FC.kB(()=>GB,false);EC.nodes.addAll([new o.Text('\n      The current time is: '),GC,new o.Text('\n    ')]);FC.EB();FC.insert();}main(){LB=false;QB();SB();}typedef  p( e);typedef  TB( changes);typedef  q();typedef  UB();class v{final oldValue;final newValue;final  changes;v(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is v&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>bB(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class IB{IB();} VB(g, i,[ debugName]){if(g is n){var h=g;return w(h,(m){i(new v(h,h,m));});}var j=new BB(g,i,debugName);if(!j.HC()){return WB;}return j.IC;} w( g, i){if(g.PB==null)g.PB=new CB();var h=g.PB.add(i);return h.remove;}class n{} WB(){}var t;var AB;class BB{static var XB=0;final  JC= ++BB.XB;final  KC;final  LC;final  MC;final  NC=new Map();final  OC=[] ;var PC=false;var QC;BB(this.KC,this.LC,this.MC); toString()=>MC!=null?'<observer ${JC}: ${MC}>':'<observer ${JC}>'; HC(){var h=t;t=this;try {QC=KC();if(QC is Iterable&&QC is !List&&QC is !n){QC=(QC as Iterable).toList();}}catch (g,i){JB(g,i,KC,'from ${this}');QC=null;}NC.forEach(RC);NC.clear();assert(t==this);t=h;SC();return OC.length>0;} TC( i){try {LC(i);}catch (g,h){JB(g,h,LC,'from ${this}');}} SC(){var g=QC;if(g is !n)return;OC.add(w(g,(h){TC(new v(g,g,h));}));} RC( i, j){OC.add(w(i,(m){if(PC)return;for(var g in m){var h=j[g.key];if(h!=null&&(h&g.type)!=0){PC=true;if(AB==null){AB=new rB.SplayTreeMap();}AB[JC]=this;return;}}}));} IC(){for(var g in OC){g();}PC=false;}}typedef  YB(error,stackTrace,obj, message);var JB=ZB; ZB(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class aB{aB();}class k<l>{var UC;var VC;var WC;var XC;k.BC( g,this.WC):XC=g{if(WC!=null)WC.YC++ ;} get next=>VC; get value=>XC;set value( g)=>XC=g; ZC( g, h){VC=h;UC=g;if(g!=null)g.VC=this;if(h!=null)h.UC=this;return this;} append( g)=>new k<l>.BC(g,WC).ZC(this,VC); remove(){if(WC==null)return;WC.YC-- ;if(UC!=null){UC.VC=VC;}else{WC.aC=VC;}if(VC!=null){VC.UC=UC;}else{WC.bC=UC;}VC=null;UC=null;WC=null;}}class CB<l> extends rB.IterableBase<l>{var aC;var bC; get length=>YC;var YC=0;CB(){} get head=>aC; add( h){var g=new k<l>.BC(h,this);if(bC==null)return aC=bC=g;return bC=g.ZC(bC,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new wB<l>(this);}class wB<l> implements Iterator<l>{var cC;var WC;var dC;var eC=-1;wB(this.WC){cC=new List<k>(WC.length);var h=0;var g=WC.head;while (g!=null){cC[h++ ]=g;g=g.next;}} get current=>dC; moveNext(){do{eC++ ;}while(eC<cC.length&&cC[eC].WC!=WC);if(eC<cC.length){dC=cC[eC].value;return true;}else{dC=null;return false;}}}KB(h,g)=>h.hashCode*31+g.hashCode;bB(h,g,i)=>KB(KB(h,g),i); cB(h, g,[ stringValue]){var i=h is aB;if(stringValue==null){stringValue=h.toString();}if(!i&&g is o.Text){g.text=stringValue;}else{var j=g;g=i?new o.Element.html(stringValue):new o.Text(stringValue);j.replaceWith(g);}return g;}abstract class DB{ EB(){} insert(); remove();}class xB extends DB{final exp;final  action;final  isFinal;var u;xB(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new v(null,exp()));}else if(u!=null){throw new StateError('binding already attached');}else{u=eB(exp,action,'generic-binding');}} remove(){if(!isFinal){u();u=null;}}}class yB extends DB{final  lB;final  children=[] ;final  nodes=[] ;yB(this.lB); kB( h,i){var g=new o.Text('');children.add(new xB(()=>'${h()}',(j){g=cB(h(),g,j.newValue);},i));return g;} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); EB(){for(var g=0,h=children.length;g<h;g++ ){children[g].EB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var LB=false; dB(g, j,[ debugName]){if(LB)return VB(g,j);if(j==null)return (){};if(s==null)s=new CB<MB>();var h;var i=false;if(g is OB){h=(g as OB).fC;}else if(g is Function){h=g;try {var m=g();if(m is List){i=true;}else if(m is Iterable){i=true;h=()=>g().toList();}}catch (mB,nB){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${mB}, ${nB})');}}else if(g is List){h=()=>g;i=true;}else if(g is Iterable){h=()=>g.toList();i=true;}var oB=i?new zB(h,j,debugName):new MB(h,j,debugName);var pB=s.add(oB);return pB.remove;} eB(h,i,[debugName]){var j=dB(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new v(null,g));return j;}var s;class MB{final  FB;final  fC;final  gC;var hC;MB(this.fC,this.gC,this.FB){hC=fC();} toString()=>FB==null?'<unnamed>':FB; jB(){var g=iC();if(jC(g)){var h=hC;kC(g);gC(new v(h,g));return true;}return false;} jC(g)=>hC!=g; kC(g){hC=g;}iC(){try {return fC();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return hC;}}final  NB=10; fB(){if(s==null)return;var g;var h=0;do{g=false;for(var i in s){if(i.jB()){g=true;}}}while(g&& ++h<NB);if(h==NB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  gB<hB>();class OB<hB>{OB();}class zB<hB> extends MB{zB(g, i, h):super(g,i,h){kC(iC());} jC( h){if(hC.length!=h.length)return true;for(int g=0;g<hC.length;g++ ){if(hC[g]!=h[g])return true;}return false;} kC(g){hC=new List<hB>.from(g);}}//@ sourceMappingURL=littleben_clock.html_bootstrap.dart.map
