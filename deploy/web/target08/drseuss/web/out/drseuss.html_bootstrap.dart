import "dart:uri" as tC;import "dart:html" as j;import "dart:async" as FB;import "dart:collection" as fC;class gC{static const  hC="Chrome";static const  iC="Firefox";static const  jC="Internet Explorer";static const  kC="Safari";final  TC;final  minimumVersion;const gC(this.TC,[this.minimumVersion]);}class lC{final  name;const lC(this.name);}class mC extends aB{var vC;static final gB=new j.DocumentFragment.html('''
      <div class="x-converter">
        <span> <content select=".label-one"></content> </span>
        <input type="text" style="text-align:right">
          &lt; &gt;
        <input type="text">
        <span> <content select=".label-two"></content> </span>
      </div>
    ''');var wC,xC;var yC; YC(){vC=createShadowRoot();yC=new vB(vC);vC.nodes.add(gB.clone(true));wC=vC.nodes[1].nodes[3];yC.listen(wC.onChange,(h){VC();});yC.listen(wC.onInput,(h){DB=wC.value;});yC.QB(()=>DB,(g){if(wC.value!=g)wC.value=g;},false,false);xC=vC.nodes[1].nodes[5];yC.listen(xC.onChange,(h){WC();});yC.listen(xC.onInput,(h){EB=xC.value;});yC.QB(()=>EB,(g){if(xC.value!=g)xC.value=g;},false,false);yC.AB();} aC(){yC.insert();} dC(){yC.remove();yC=wC=xC=null;} NB(){super.NB();if(vC is !j.ShadowRoot)vC=this;}var ratio=0.5;var DB='0';var EB='0'; VC(){var g=double.parse(DB);var h=g/ratio;EB=h.toStringAsFixed(2);} WC(){var h=double.parse(EB);var g=h*ratio;DB=g.toStringAsFixed(2);}} hB(){} iB(){var zC=j.document.body;var AD;var BD=new vB(zC);AD=zC.nodes[1].nodes[1];BD.QB(()=>0.5,(g){if(AD.xtag.ratio!=g)AD.xtag.ratio=g;},false,false);BD.s(new mC()..host=AD);BD.AB();BD.insert();}main(){VB=false;hB();iB();}typedef  u( e);typedef  jB( changes);typedef  q();typedef  kB();class GB{final oldValue;final newValue;final  changes;GB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is GB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>rB(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class SB{SB();} lB(g, i,[ debugName]){if(g is p){var h=g;return HB(h,(n){i(new GB(h,h,n));});}var k=new JB(g,i,debugName);if(!k.CD()){return mB;}return k.DD;} HB( g, i){if(g.cB==null)g.cB=new KB();var h=g.cB.add(i);return h.remove;}class p{} mB(){}var BB;var IB;class JB{static var nB=0;final  ED= ++JB.nB;final  FD;final  GD;final  HD;final  ID=new Map();final  JD=[] ;var KD=false;var LD;JB(this.FD,this.GD,this.HD); toString()=>HD!=null?'<observer ${ED}: ${HD}>':'<observer ${ED}>'; CD(){var h=BB;BB=this;try {LD=FD();if(LD is Iterable&&LD is !List&&LD is !p){LD=(LD as Iterable).toList();}}catch (g,i){TB(g,i,FD,'from ${this}');LD=null;}ID.forEach(MD);ID.clear();assert(BB==this);BB=h;ND();return JD.length>0;} OD( i){try {GD(i);}catch (g,h){TB(g,h,GD,'from ${this}');}} ND(){var g=LD;if(g is !p)return;JD.add(HB(g,(h){OD(new GB(g,g,h));}));} MD( i, k){JD.add(HB(i,(n){if(KD)return;for(var g in n){var h=k[g.key];if(h!=null&&(h&g.type)!=0){KD=true;if(IB==null){IB=new fC.SplayTreeMap();}IB[ED]=this;return;}}}));} DD(){for(var g in JD){g();}KD=false;}}typedef  oB(error,stackTrace,obj, message);var TB=pB; pB(i,g,h, k){print('web_ui.observe: unhandled error calling ${h} ${k}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class qB{qB();}class l<m>{var PD;var QD;var RD;var SD;l.uC( g,this.RD):SD=g{if(RD!=null)RD.TD++ ;} get next=>QD; get value=>SD;set value( g)=>SD=g; UD( g, h){QD=h;PD=g;if(g!=null)g.QD=this;if(h!=null)h.PD=this;return this;} append( g)=>new l<m>.uC(g,RD).UD(this,QD); remove(){if(RD==null)return;RD.TD-- ;if(PD!=null){PD.QD=QD;}else{RD.VD=QD;}if(QD!=null){QD.PD=PD;}else{RD.WD=PD;}QD=null;PD=null;RD=null;}}class KB<m> extends fC.IterableBase<m>{var VD;var WD; get length=>TD;var TD=0;KB(){} get head=>VD; add( h){var g=new l<m>.uC(h,this);if(WD==null)return VD=WD=g;return WD=g.UD(WD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new nC<m>(this);}class nC<m> implements Iterator<m>{var XD;var RD;var YD;var ZD=-1;nC(this.RD){XD=new List<l>(RD.length);var h=0;var g=RD.head;while (g!=null){XD[h++ ]=g;g=g.next;}} get current=>YD; moveNext(){do{ZD++ ;}while(ZD<XD.length&&XD[ZD].RD!=RD);if(ZD<XD.length){YD=XD[ZD].value;return true;}else{YD=null;return false;}}}UB(h,g)=>h.hashCode*31+g.hashCode;rB(h,g,i)=>UB(UB(h,g),i); sB(g){if(g is qB)return g.toString();g=g.toString();return uB(g)?g:'#';}const tB=const["http","https","ftp","mailto"]; uB( h){var g=new tC.Uri(h).scheme;if(g=='')return true;return tB.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class v{ AB(){} insert(); remove();}class oC extends v{final  dB;var aD;final  listener;oC(this.dB,this.listener); insert(){aD=dB.listen(listener);} remove(){aD.cancel();aD=null;}}class pC extends v{final  fB;final  PB;final  eB;final  isFinal;var CB;pC(this.PB,this.fB,this.eB,this.isFinal); bD(g){fB(eB?sB(g):g);} insert(){if(isFinal){bD(PB());}else if(CB!=null){throw new StateError('data binding already attached.');}else{CB=xB(PB,(g)=>bD(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){CB();CB=null;}}}class qC extends v{final s;qC(this.s); AB(){s..YC()..XC()..NB();} insert(){s..ZC()..aC();} remove(){s..dC()..cC();}}class vB extends v{final  bC;final  children=[] ;final  nodes=[] ;vB(this.bC); listen( i, h){children.add(new oC(i,(g){h(g);yB();}));} QB(g,i,h,[isUrl=false]){children.add(new pC(g,i,isUrl,h));} s( g){children.add(new qC(g));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); AB(){for(var g=0,h=children.length;g<h;g++ ){children[g].AB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var VB=false; wB(g, k,[ debugName]){if(VB)return lB(g,k);if(k==null)return (){};if(w==null)w=new KB<WB>();var h;var i=false;if(g is ZB){h=(g as ZB).cD;}else if(g is Function){h=g;try {var n=g();if(n is List){i=true;}else if(n is Iterable){i=true;h=()=>g().toList();}}catch (o,eC){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${o}, ${eC})');}}else if(g is List){h=()=>g;i=true;}else if(g is Iterable){h=()=>g.toList();i=true;}var t=i?new rC(h,k,debugName):new WB(h,k,debugName);var RB=w.add(t);return RB.remove;} xB(h,i,[debugName]){var k=wB(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new GB(null,g));return k;}var w;class WB{final  OB;final  cD;final  dD;var eD;WB(this.cD,this.dD,this.OB){eD=cD();} toString()=>OB==null?'<unnamed>':OB; UC(){var g=fD();if(gD(g)){var h=eD;hD(g);dD(new GB(h,g));return true;}return false;} gD(g)=>eD!=g; hD(g){eD=g;}fD(){try {return cD();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return eD;}}final  XB=10; yB(){if(w==null)return;var g;var h=0;do{g=false;for(var i in w){if(i.UC()){g=true;}}}while(g&& ++h<XB);if(h==XB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  YB<zB>();typedef  AC<zB>( value);class ZB<zB>{ZB();}class rC<zB> extends WB{rC(g, i, h):super(g,i,h){hD(fD());} gD( h){if(eD.length!=h.length)return true;for(int g=0;g<eD.length;g++ ){if(eD[g]!=h[g])return true;}return false;} hD(g){eD=new List<zB>.from(g);}}abstract class aB implements j.Element{var iD;var jD; get host{if(iD==null)throw new StateError('host element has not been set.');return iD;}set host( g){if(g==null){throw new ArgumentError('host must not be null.');}if(g.xtag!=null){throw new ArgumentError('host must not have its xtag property set.');}if(iD!=null){throw new StateError('host can only be set once.');}g.xtag=this;iD=g;}createShadowRoot(){if(bB){return host.createShadowRoot();}if(jD==null)jD=[] ;jD.add(new j.DivElement());return jD.last;} XC(){} ZC(){} cC(){} NB(){if(bB)return;if(jD.length==0){throw new StateError('Distribution algorithm requires at least one shadow' ' root and can only be run once.');}var k=jD;var g=k.removeLast();var RB=g;var o=new List.from(nodes);var n=[] ;var t=[] ;while (true){o=kD(g,o);var h=g.query('shadow');if(h!=null){if(k.length>0){g=k.removeLast();n.add(h);t.add(g);}else{MB(h,o);break;}}else{break;}}for(int i=0;i<n.length;i++ ){var h=n[i];var g=t[i];MB(h,g.nodes);}nodes.clear();nodes.addAll(RB.nodes);} kD( t, k){for(var g in t.queryAll('content')){if(!CC(g))continue;var i=g.attributes['select'];if(i==null||i=='')i='*';var h=[] ;var o=[] ;for(var n in k){(BC(n,i)?h:o).add(n);}if(h.length==0){h=g.nodes;}MB(g,h);k=o;}return k;}static  BC( h, g){if(h is !j.Element)return g=='*';return (h as j.Element).matches(g);}static  LB( g)=>g.tagName=='CONTENT'||g.tagName=='SHADOW';static  CC( g){assert(LB(g));for(g=g.parent;g!=null;g=g.parent){if(LB(g))return false;}return true;}static  MB( g, h){assert(LB(g));g.parent.insertAllBefore(h,g);g.remove();} get nodes=>host.nodes; replaceWith( g){host.replaceWith(g);} remove()=>host.remove();set text( g){host.text=g;} contains( g)=>host.contains(g); insertBefore( g, h)=>host.insertBefore(g,h); insertAllBefore( g, h)=>host.insertAllBefore(g,h); get attributes=>host.attributes; get children=>host.children; clone( g)=>host.clone(g); get parent=>host.parent; get parentNode=>host.parentNode; get nodeValue=>host.nodeValue; get id=>host.id; set innerHtml( g){host.innerHtml=g;} get tagName=>host.tagName; matches( g)=>host.matches(g); query( g)=>host.query(g); queryAll( g)=>host.queryAll(g); get HC=>host.HC; get IC=>host.IC; get LC=>host.LC; JC( g)=>host.JC(g); KC( g)=>host.KC(g); NC( g)=>host.NC(g); OC( g)=>host.OC(g); SC( h, g)=>host.SC(h,g);get FC=>host.FC; get GC=>host.GC; get localName=>host.localName; get MC=>host.MC; EC( h, g,[ useCapture]){host.EC(h,g,useCapture);} PC( g)=>host.PC(g); QC( h, g,[ useCapture]){host.QC(h,g,useCapture);} RC( g, h)=>host.RC(g,h);get xtag=>host.xtag;set xtag(g){host.xtag=g;} append( g)=>host.append(g); get onChange=>host.onChange; get onInput=>host.onInput;}var DC=false; get bB=>DC&&j.ShadowRoot.supported;//@ sourceMappingURL=drseuss.html_bootstrap.dart.map
